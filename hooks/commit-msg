#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

RED='\033[0;31m'
NC='\033[0m'

CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

MSG_HISTORY=$(git cherry -v main | cut -d ' ' -f 3-)

PATTERN="^fix|feat(\(.*\))?\!?:"

if [ -z "$(grep -E -i "$PATTERN" "$1")" ]; then
	for i in $MSG_HISTORY; do
		if [ -n "$(echo "$i" | grep -E -i "$PATTERN")" ]; then
			exit 0
		fi
	done
	echo "${RED}Missing commit message with prefix feat/fix. Consider adding one before merging PR for automatic semver release.${NC}"
fi

exit 0